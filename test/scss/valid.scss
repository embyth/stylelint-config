@forward "something";
@use "base";
@use "sass:list";
@use "sass:map";
@use "sass:math";
@use "sass:meta";
@use "sass:string";
@import "something-else";

// Multi-line double-slash comment
// comment

$postfix: if($infix != "", $infix + "-down", "");

@function remove-where($list, $condition) {
  $new-list: ();
  $separator: list.separator($list);

  @each $element in $list {
    @if not meta.call($condition, $element) {
      $new-list: list.append($new-list, $element, $separator: $separator);
    }
  }

  @return $new-list;
}

@mixin corner-icon($name, $top-or-bottom, $left-or-right) {
  .icon-#{$name} {
    position: absolute;
    background-image: url("/icons/#{$name}.svg");
    #{$top-or-bottom}: 0;
    #{$left-or-right}: 0;
  }
}

@mixin triangle($size, $color, $direction) {
  @if $direction == up {
    border-bottom-color: $color;
  }

  @else if $direction == right {
    border-left-color: $color;
  }

  @else if $direction == down {
    border-top-color: $color;
  }

  @else if $direction == left {
    border-right-color: $color;
  }

  @else {
    @error "Unknown direction #{$direction}.";
  }
  border-color: transparent;
  border-style: solid;
  border-width: math.div($size, 2);
}

@mixin theme($theme: DarkGray) {
  background: $theme;
  box-shadow: 0 0 1px rgb($theme / 25%);
}

%message-shared {
  color: #333333;
  border: 1px solid #cccccc;
}

$default-color: #000000 !default;
$local-color: #333333;
$fonts: "Tahoma", "Helvetica Neue", "Helvetica", sans-serif;
$theme-colors: (
  "success": #28a745,
  "warning": #ffc107,
);
$global-variable: first global value;

:root {
  $global-variable: second global value !global;
  --brand-red: hsl(5deg 10% 40%);
}

.selector-1,
.selector-3[type="text"] {
  top: calc(100% - 2rem);
  color: base.$primary-color;
  background: linear-gradient(#ffffff, rgb(0 0 0 / 80%));

  a {
    width: math.div(300px, 960px) * 100%;
  }
}

.selector-x {
  width: 10%;
}

.selector-y {
  width: 20%;
}

.selector-z {
  width: 30%;
}

.selector-a {
  @include theme;
}

.selector-b {
  @extend %message-shared;
  @include theme($theme: DarkRed);
}

/* Single-line comment */

@media (min-width >= 60em) {
  .selector {
    // Flush to parent comment
    @include corner-icon("mail", top, left);

    transform: translate(1, 1) scale(3);
  }
}

@media (orientation: portrait), projection and (color) {
  // Flush to parent double-slash comment
  .selector-i + .selector-ii {
    @include triangle(5px, black, right);

    background: hsl(20deg 25% 33%);

    .selector-j {
      @function contains-helvetica($string) {
        @return string.index($string, "Helvetica");
      }

      font-family: remove-where($fonts, meta.get-function("contains-helvetica"));
    }
  }
}

// Multi-line double-slash comment
// comment
@media screen and (min-resolution: 192dpi),
  screen and (min-resolution: 2dppx) {
  .selector {
    height: 10rem;
    background-image:
      repeating-linear-gradient(
        -45deg,
        transparent,
        #ffffff 25px,
        rgb(255 255 255 / 100%) 50px
      );
  }

  /* Flush nested single line comment */
  .selector::after {
    background-color: map.get($theme-colors, "warning");
    background-image: url("x.svg");
    content: "â†’";
  }
}

@keyframes fade-in {
  from {
    opacity: 0%;
  }

  to {
    opacity: 100%;
  }
}
